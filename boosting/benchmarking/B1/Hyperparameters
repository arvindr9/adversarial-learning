clf = 'rf'

estimator_params = {'n_estimators': 50, 'criterion': 'entropy', 'max_depth': 5, 'min_samples_split': 5}


#Loading Mnist data
# Load training and eval data
mnist = tf.contrib.learn.datasets.load_dataset("mnist")
train_data = mnist.train.images  # Returns np.array
train_labels = np.asarray(mnist.train.labels, dtype=np.int32)
eval_data = mnist.test.images  # Returns np.array
eval_labels = np.asarray(mnist.test.labels, dtype=np.int32)

#Subsampling the training dataset
rand_idx = np.random.randint(0,len(train_data), (1000,))
train_data_ss = train_data[rand_idx]
train_labels_ss = train_labels[rand_idx]

#Subsampling the testing dataset
rand_idx = np.random.randint(0,len(eval_data), (500,))
eval_data_ss = eval_data[rand_idx]
eval_labels_ss = eval_labels[rand_idx]

#Training parameters
no_boosting_clf = 10
epsilon_train = 0.3
n_advimages = 100
n_boost_random_train_samples =  100

number of basinhopping iterations = 10

#Testing parameters
n_test_adv_images = 200
epsilon_test_list = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
